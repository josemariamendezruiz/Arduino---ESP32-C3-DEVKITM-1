/*
    CENTRAL METEOROLOGICA CON 5 DATOS TEMPERATURA, HUMEDAD, ALTURA, PRESION Y LUZ
    AUTOR : JOSE MARIA MENDEZ RUIZ
    MAYO 2025
    CODIGO LIBRE PARA UTILIZAR COMO QUIERAS

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <BH1750.h>

/* LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */
#include <LiquidCrystal_I2C.h>
/* FIN DE LAS LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */


#define SEALEVELPRESSURE_HPA (1013.25)
#define I2C_SDA 2
#define I2C_SCL 3

/* LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */
int total_lineas = 4;          // Para indicar cuantas lineas tiene nuestro lcd
int total_columnas = 20;       // Para indicar cuantas columnas tiene nuestro lcd
/* FIN DE LAS LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */


Adafruit_BME280 bme; // DECLARAMOS EL OBJETO para el sensor BME280
BH1750 SENSOR_BH1750(0x23); // DECLARAMOS EL OBJETO para el sensor de luz

/* LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */
LiquidCrystal_I2C lcd_i2c(0x27, total_columnas, total_lineas); // indicamos cuantos caracteres y lineas tiene nuestro lcd
/* FIN DE LAS LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */


void setup() {
    Serial.begin(9600);
    Wire.begin(I2C_SDA, I2C_SCL);
    
    if (! bme.begin(0x76, &Wire)) {
        Serial.println("Error BME280");
        while (1);
    }

    if (! SENSOR_BH1750.begin(BH1750::CONTINUOUS_HIGH_RES_MODE)) {
        Serial.println(F("Error BH1750"));
        while (1);
    }
    
    /* LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */
    lcd_i2c.begin();
    lcd_i2c.backlight();
    /* FIN DE LAS LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */

}


void loop() {
    bme.takeForcedMeasurement(); // has no effect in normal mode
    float lux = SENSOR_BH1750.readLightLevel();
    
    Serial.print("Temperatura = ");
    Serial.print(bme.readTemperature());
    Serial.println(" *C");

    Serial.print("Presion = ");
    Serial.print(bme.readPressure() / 100.0F);
    Serial.println(" hPa");

    Serial.print("Altitud = ");
    Serial.print(bme.readAltitude(SEALEVELPRESSURE_HPA));
    Serial.println(" m");

    Serial.print("Humedad = ");
    Serial.print(bme.readHumidity());
    Serial.println(" %");
  
    Serial.print("Luz: ");
    Serial.print(lux);
    Serial.println(" lx");

    Serial.println();

    /* ESTAS LINEAS SON PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */
    lcd_i2c.setCursor(0, 0);
    lcd_i2c.print("TEMP:");
    lcd_i2c.setCursor(7, 0);
    lcd_i2c.print(bme.readTemperature());

    lcd_i2c.setCursor(0, 1);
    lcd_i2c.print("PRESION:");
    lcd_i2c.setCursor(10, 1);
    lcd_i2c.print((bme.readPressure() / 100.0F));

    lcd_i2c.setCursor(0, 2);
    lcd_i2c.print("ALT:");
    lcd_i2c.setCursor(5, 2);
    lcd_i2c.print(bme.readAltitude(SEALEVELPRESSURE_HPA));

    lcd_i2c.setCursor(11, 2);
    lcd_i2c.print("HUM:");
    lcd_i2c.setCursor(16, 2);
    lcd_i2c.print(bme.readHumidity());

    lcd_i2c.setCursor(0, 3);
    lcd_i2c.print("LUZ:");
    lcd_i2c.setCursor(5, 3);
    lcd_i2c.print(lux);


    /* FIN DE LAS LINEAS PARA EL LCD, SI NO USAS LCD LAS ELIMINAS */

    
    delay(1000); //pausa de un segundo para que haga una lectura una vez por segundo
   
}
